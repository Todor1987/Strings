<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.uni-koeln.spinfo</groupId>
	<artifactId>strings</artifactId>
	<version>0.1</version>
	<properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	</properties>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/test/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Builds one jar for each application and copies the dependencies and resources into a separate directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>
								${project.build.directory}/release/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/release</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>build-moduleworkbenchgui</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/release
							</outputDirectory>
							<finalName>moduleworkbenchgui</finalName>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>base.workbench.ModuleWorkbenchGui</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
					<execution>
						<id>build-modulebatchrunner</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/release
							</outputDirectory>
							<finalName>modulebatchrunner</finalName>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>base.workbench.ModuleBatchRunner</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
					<execution>
						<id>build-modulewebserver</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/release
							</outputDirectory>
							<finalName>modulewebserver</finalName>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>base.web.Server</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- A single jar for the module-web-server can be built with "mvn compile assembly:single" -->
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<attach>false</attach>
					<appendAssemblyId>false</appendAssemblyId>
					<archive>
						<manifest>
							<mainClass>base.web.Server</mainClass>
						</manifest>
						<manifestEntries>
							<Project-Version>${project.version}</Project-Version>
							<Build-Date>${maven.build.timestamp}</Build-Date>
							<Project-Name>${project.artifactId}_${project.version}</Project-Name>
						</manifestEntries>
					</archive>
					<finalName>modulewebserver-standalone</finalName>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<!-- <phase>package</phase> -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<show>public</show>
				</configuration>
			</plugin>
		</plugins>
		
		<pluginManagement>
<plugins>
    <!-- Ignore/Execute plugin execution -->
    <plugin>
        <groupId>org.eclipse.m2e</groupId>
        <artifactId>lifecycle-mapping</artifactId>
        <version>1.0.0</version>
        <configuration>
            <lifecycleMappingMetadata>
                <pluginExecutions>
                    <!-- copy-dependency plugin -->
                    <pluginExecution>
                        <pluginExecutionFilter>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <versionRange>[1.0.0,)</versionRange>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                        </pluginExecutionFilter>
                        <action>
                            <ignore />
                        </action>
                    </pluginExecution>
                </pluginExecutions>
            </lifecycleMappingMetadata>
        </configuration>
    </plugin>
   </plugins></pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<!-- Explicitly require a javax.servlet version, do not use the one required by jcifs -->
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>4.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>4.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>4.6.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<!-- Neo4j-API -->
		<!-- Jersey -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.18.1</version>
		</dependency>
		<!-- Samba-Client-Libs -->
		<dependency>
		    <groupId>jcifs</groupId>
		    <artifactId>jcifs</artifactId>
		    <version>1.3.17</version>
		</dependency>
		<dependency>
			<groupId>it.uniroma1.dis.wsngroup.gexf4j</groupId>
			<artifactId>gexf4j</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
		    <groupId>gov.nist.math</groupId>
		    <artifactId>jama</artifactId>
		    <version>1.0.3</version>
		</dependency>
		<!-- Web framework for the web server -->
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-core</artifactId>
			<version>2.6.0</version>
		</dependency>
		<!-- Logging for the web server -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
		</dependency>
		<!-- sqlite databse libraries for the webserver -->
		<dependency>
			<groupId>com.j256.ormlite</groupId>
			<artifactId>ormlite-core</artifactId>
			<version>5.0</version>
		</dependency>
		<dependency>
			<groupId>com.j256.ormlite</groupId>
			<artifactId>ormlite-jdbc</artifactId>
			<version>5.0</version>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.21.0.1</version>
		</dependency>
		<!-- jClouds for the CloudReader and CloudWriter modules -->
		<dependency>
			<groupId>org.apache.jclouds</groupId>
			<artifactId>jclouds-all</artifactId>
			<version>2.0.3</version>
		</dependency>
			<dependency>
			<groupId>org.apache.jclouds.labs</groupId>
			<artifactId>b2</artifactId>
			<version>2.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>
	<url>http://www.spinfo.phil-fak.uni-koeln.de/sas.html</url>
	<name>Strings &amp; Structures: Codes of Sense and Function in Genomics and Linguistics</name>
	<organization>
		<name>Universität zu Köln</name>
		<url>http://www.uni-koeln.de</url>
	</organization>
	<description>An extensible software workbench tool that comes with a collection of modules used in context of the Strings &amp; Structures project.</description>
	<profiles>
		<profile>
			<id>standalone</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>2.6</version>
						<executions>
						<!-- For stand-alone module builds, add execution elements below this line -->
							<execution>
								<id>ExampleModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ExampleModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.examples.ExampleModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ExampleRandString</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ExampleRandString</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.examples.ExampleRandString</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TreeBuilderV3Module</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TreeBuilderV3Module</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_building.treeBuilder.TreeBuilderV3Module</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>GeneralisedSuffixTreeModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>GeneralisedSuffixTreeModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_building.suffixTreeModuleWrapper.GeneralisedSuffixTreeModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SegmentCombinerModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SegmentCombinerModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.segmentation.SegmentCombinerModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SegmentMatrixModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SegmentMatrixModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.segmentation.SegmentMatrixModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SegmentJoinerModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SegmentJoinerModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.segmentation.SegmentJoinerModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ParadigmSegmenterModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ParadigmSegmenterModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.segmentation.paradigmSegmenter.ParadigmSegmenterModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SegmentationCheckModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SegmentationCheckModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.segmentation.SegmentationCheckModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SegmentsTransitionNetworkModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SegmentsTransitionNetworkModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.segmentation.SegmentsTransitionNetworkModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SegmentDistanceMatrixModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SegmentDistanceMatrixModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.segmentation.SegmentDistanceMatrixModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>KwipBowMatrixModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>KwipBowMatrixModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.kwip.KwipBowMatrixModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>KeyWordInPhraseModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>KeyWordInPhraseModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.kwip.KeyWordInPhraseModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>FilterModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>FilterModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.FilterModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TextSorterModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TextSorterModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.TextSorterModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>RegExReplacementModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>RegExReplacementModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.RegExReplacementModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ComparisonModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ComparisonModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.ComparisonModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>BurrowsWheelerTransformationModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>BurrowsWheelerTransformationModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.burrows_wheeler.BurrowsWheelerTransformationModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>CaseChangerModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>CaseChangerModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.CaseChangerModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>RegExLineFilterModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>RegExLineFilterModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.RegExLineFilterModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ReverserModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ReverserModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.basic_text_processing.ReverserModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>HalAdvancedModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>HalAdvancedModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.hal.HalAdvancedModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>GeneralizedSuffixTreesMorphologyModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>GeneralizedSuffixTreesMorphologyModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_building.suffixTreeModuleWrapper.GeneralizedSuffixTreesMorphologyModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>AtomicRangeSuffixTrieBuilder</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>AtomicRangeSuffixTrieBuilder</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_building.treeBuilder.AtomicRangeSuffixTrieBuilder</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TreeBuilderV2Module</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TreeBuilderV2Module</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_building.treeBuilder.TreeBuilderV2Module</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TreeBuilder</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TreeBuilder</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_building.treeBuilder.TreeBuilder</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SuffixNetBuilderModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SuffixNetBuilderModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.experimental.suffixNetBuilder.SuffixNetBuilderModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ColourGraph</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ColourGraph</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.visualization.ColourGraph</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ASCIIGraph</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ASCIIGraph</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.visualization.ASCIIGraph</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SeqQueryController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SeqQueryController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_editing.seqNewick.SeqQueryController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SeqSuffixTrie2SuffixTreeController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SeqSuffixTrie2SuffixTreeController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_editing.seqSuffixTrie2SuffixTree.SeqSuffixTrie2SuffixTreeController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>GexfFilterModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>GexfFilterModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.graph_editing.GexfFilterModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>OANCXMLParser</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>OANCXMLParser</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.parser.oanc.OANCXMLParser</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ExampleGsonSerialization</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ExampleGsonSerialization</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.examples.ExampleGsonSerialization</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ExampleGsonDeserialization</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ExampleGsonDeserialization</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.examples.ExampleGsonDeserialization</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>LFGroupBuildingModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>LFGroupBuildingModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.lfgroups.LFGroupBuildingModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MatrixBitwiseOperationModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MatrixBitwiseOperationModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.matrix.MatrixBitwiseOperationModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MatrixFilterModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MatrixFilterModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.matrix.MatrixFilterModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MatrixColumnSumModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MatrixColumnSumModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.matrix.MatrixColumnSumModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MatrixRowColPairExtractorModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MatrixRowColPairExtractorModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.matrix.MatrixRowColPairExtractorModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>BowTypeMatrixModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>BowTypeMatrixModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.matrix.BowTypeMatrixModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MclModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MclModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.matrix.MclModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MatrixEliminateOppositionalValuesModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MatrixEliminateOppositionalValuesModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.matrix.MatrixEliminateOppositionalValuesModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SuffixTreeVectorizationWrapperController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SuffixTreeVectorizationWrapperController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.vectorization.suffixTreeVectorizationWrapper.SuffixTreeVectorizationWrapperController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>VectorMedianCalculatorModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>VectorMedianCalculatorModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.vectorization.VectorMedianCalculatorModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>VectorAberrationCalculatorModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>VectorAberrationCalculatorModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.vectorization.VectorAberrationCalculatorModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>BranchLengthGrouping</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>BranchLengthGrouping</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_properties.branchLengthGroups.BranchLengthGrouping</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TreeIndexController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TreeIndexController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_properties.treeIndexes.TreeIndexController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MotifDetectionController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MotifDetectionController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_properties.motifDetection.MotifDetectionController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SeqTreePropController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SeqTreePropController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.tree_properties.seqTreeProperties.SeqTreePropController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>BagsOfWordsDistancesModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>BagsOfWordsDistancesModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.bag_of_words.BagsOfWordsDistancesModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>BagsOfWordsModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>BagsOfWordsModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.bag_of_words.BagsOfWordsModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SuffixTreeClusteringWrapperV2</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SuffixTreeClusteringWrapperV2</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.clustering.suffixTreeClusteringModuleWrapper.SuffixTreeClusteringWrapperV2</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SuffixTreeClusteringModuleWrapper</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SuffixTreeClusteringModuleWrapper</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.clustering.suffixTreeClusteringModuleWrapper.SuffixTreeClusteringModuleWrapper</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>MinkowskiDistanceMatrixModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>MinkowskiDistanceMatrixModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.clustering.minkowskiDistance.MinkowskiDistanceMatrixModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TreeSimilarityClusteringModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TreeSimilarityClusteringModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.clustering.treeSimilarityClustering.TreeSimilarityClusteringModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SeqNewickExporterControllerV2</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SeqNewickExporterControllerV2</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.seqNewickExporter.SeqNewickExporterControllerV2</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SeqNewickExporterController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SeqNewickExporterController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.seqNewickExporter.SeqNewickExporterController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ExtensibleTreeNode2GEXFModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ExtensibleTreeNode2GEXFModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.ExtensibleTreeNode2GEXFModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>ExtensibleTreeNode2CSVModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>ExtensibleTreeNode2CSVModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.ExtensibleTreeNode2CSVModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TreeBuilder2OutputControllerV2</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TreeBuilder2OutputControllerV2</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.treeBuilder2Output.TreeBuilder2OutputControllerV2</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TreeBuilder2OutputController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TreeBuilder2OutputController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.treeBuilder2Output.TreeBuilder2OutputController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>Dot2TreeController</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>Dot2TreeController</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.dot2tree.Dot2TreeController</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>SuffixTreeVector2CsvModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>SuffixTreeVector2CsvModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.SuffixTreeVector2CsvModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>CSV2GEXFModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>CSV2GEXFModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.CSV2GEXFModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>PlainText2TreeBuilderConverter</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>PlainText2TreeBuilderConverter</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.plainText2TreeBuilder.PlainText2TreeBuilderConverter</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<execution>
								<id>TextReducerModule</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.directory}/release
									</outputDirectory>
									<finalName>TextReducerModule</finalName>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<classpathPrefix>lib/</classpathPrefix>
											<mainClass>modules.format_conversion.TextReducerModule</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
